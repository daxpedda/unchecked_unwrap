branches:
  only:
  - master
  - stable

# we plan to cache the rust compiler to shorten build times
language: minimal

env:
  global:
  - RUST_BACKTRACE=1

cache:
  directories:
  # cache rust compiler
  - "$HOME/.rustup"
  # cache cargo, for cargo subcommands
  - "$HOME/.cargo"
  # cache kcov, we don't want to recompile it every time, only used in nightly
  - target/kcov-master/build

before_cache:
# we don't want to cache crates
- rm -rf "$HOME/.cargo/registry"

before_install:
# download the rust installer
- curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$TRAVIS_RUST_VERSION -y
# different command needed for windows
- if [ "$TRAVIS_OS_NAME" != "windows" ]; then
    source $HOME/.cargo/env;
  else
    export PATH=$HOME/.cargo/bin:$PATH;
  fi
# FIXME: find out if the installer is enough to update
# FIXME: if installer already updates, we should only download the installer if rust isn't installed
- rustup update

before_script:
- cargo build
- cargo test
# nightly has additional features we want to test and use
- if [ "$TRAVIS_RUST_VERSION" != "nightly" ]; then
    cargo doc;
  else
    cargo rustdoc -- -Z unstable-options --enable-index-page;
    cargo bench;
  fi

jobs:
  include:
  - os: linux
    env:
    - TRAVIS_RUST_VERSION=nightly
    - secure: TTTmuNu26qNIlzzHciB3QFD712ppIDzzKYfOoUjC6/adaaoxVMBIkU03Ha8Dmeml9ti5BQdxceFTnEs+5k1FDRRKkAVv+X0lyVT6A/8EHXcQUCZmmsLNHPktNztxRE0FLlK9n8hth8idW3RCjyZ1H3WEYLVvhegAzHvFZsQtFKGfpMgYi1sTBAlrf/XnKQmuDhDVGZJb4HTzdI8iPwioeTTrQrDJ96SHWiAv9aC+E3tEh9ITnoDxjIIpPuL5Ur+NNBQ+gXYCvYc1+KhIjQhGWpOcd6ceAvTUSchJe0AzUwLs0iPvI+8RAGZrydypth6t2WdnF13rSXHE7IgnZukzALI43rRO82iOZJVswR7QXyjudV8kJ0L/a6q+x+ydwaByYV97Y+oxng/4co95Hpex/zlApGz1nq2snCAHCpFFSmQ6luDEVffoyv8hWvtwDE5beo8RwUXeG8ym2Qbq/eEO6p+3W1NNYJGpiIMn+NrDjFKJ8XpmqNkDwMrLboa2xW60mlM2EMaw1L+NuCrPlHvvbSmAAIGE12xwDZHYfgV1UMuc8DWjqtluzpBEZlsdsN71oLDpGK9W97srQSIozhp4JX92YSBAcZvakmhKqsD9e02gklfTX23NmW0jXEW1ehvIwB/FcM9UMeYqSvssNhCeci+Cf+xuLLtzQujrXTqsz88=
    sudo: required
    addons:
      apt:
        packages:
        - libcurl4-openssl-dev
        - libelf-dev
        - libdw-dev
        - binutils-dev
        - cmake
    script:
    # install and update cargo subcommands
    # run coverage
    # upload test coverage
    # decrypt deploy key
    # start ssh agent in background
    # add deploy key to ssh
    # upload the documentation
    - if [ "${TRAVIS_PULL_REQUEST}" == false ]; then
        cargo install cargo-update || echo "cargo-update already installed";
        cargo install cargo-travis --git "https://github.com/daxpedda/cargo-travis.git" || echo "cargo-travis already installed";
        cargo install-update -a -g;
        cargo coverage;
        bash <(curl -s https://codecov.io/bash) -s target/kcov;
        echo $github_deploy_key | gpg --passphrase-fd 0 ".travis/github_deploy_key.gpg"
        chmod 600 ".travis/github_deploy_key";
        eval "$(ssh-agent -s)";
        ssh-add ".travis/github_deploy_key";
        cargo doc-upload --branch $TRAVIS_BRANCH;
      fi

  - os: linux
    env:
    - TRAVIS_RUST_VERSION=beta

  - os: linux
    env:
    - TRAVIS_RUST_VERSION=stable

  - os: osx
    env:
    - TRAVIS_RUST_VERSION=nightly

  - os: windows
    language: sh
    env:
    - RUST_BACKTRACE=1
    - TRAVIS_RUST_VERSION=nightly
    cache:
      directories:
      # cache rust compiler
      - "$HOME/.rustup"
      # cache cargo, for cargo subcommands
      - "$HOME/.cargo"
      # cache kcov, we don't want to recompile it every time, only used in nightly
      - target/kcov-master/build
    before_cache:
    # we dont want to cache crates
    - rm -rf "$HOME/.cargo/registry"
    before_install:
    - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$TRAVIS_RUST_VERSION -y
    - export PATH=$HOME/.cargo/bin:$PATH
    - rustup update
    before_script:
    - cargo build
    - cargo test
    - if [ "$TRAVIS_RUST_VERSION" != "nightly" ]; then
        cargo doc;
      else
        cargo rustdoc -- -Z unstable-options --enable-index-page;
        cargo bench;
      fi
