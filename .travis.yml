branches:
  only:
  - master
  - stable

# we plan to cache the rust compiler to shorten build times
language: minimal

env:
  global:
  - RUST_BACKTRACE=1

cache:
  directories:
  # cache rust compiler
  - "$HOME/.rustup"
  # cache cargo, for cargo subcommands
  - "$HOME/.cargo"
  # cache kcov, we don't want to recompile it every time, only used in nightly
  - target/kcov-master/build

before_cache:
# we don't want to cache crates
- rm -rf "$HOME/.cargo/registry"

before_install:
# download the rust installer
- curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$TRAVIS_RUST_VERSION -y
# different command needed for windows
- if [ "$TRAVIS_OS_NAME" != "windows" ]; then
    source $HOME/.cargo/env;
  else
    export PATH=$HOME/.cargo/bin:$PATH;
  fi
# FIXME: find out if the installer is enough to update
# FIXME: if installer already updates, we should only download the installer if rust isn't installed
- rustup update

before_script:
- cargo build
- cargo test
# nightly has additional features we want to test and use
- if [ "$TRAVIS_RUST_VERSION" != "nightly" ]; then
    cargo doc;
  else
    cargo rustdoc -- -Z unstable-options --enable-index-page;
    cargo bench;
  fi

jobs:
  include:
  - os: linux
    env:
    - TRAVIS_RUST_VERSION=nightly
    - secure: jLdAXu3RbP294FUK2ZZZK8jJgzmtlKxSUO8KECsw85DnmF2uu5nfdAErQW5YSu5SorwZETYAwr80TBKlkFh7Mar5SjE0t8TSPXRLVAdO3S2ncCDU02Ld1t1DyBpHhKFyqrtT7+7Pvpg7vHfNmoLq5BzRT+RGd+K0lSxXxoex37uvjJtgMFA4oar6LswNwO9/ewa+Cb2ogmy2lOLK2K0Ol1g+xefuIrNcxMi5iv37KwMwEWdkuDTYBOlgh6FPKcenRV8439AnGN3MYaCr0NdQc2oEtFobjqrY9EwM+SZ7Xie/f0FhYbsRQu7LKOIsBC18cE4zyNPuQ4nm+dRGWeZXJt0+0l79pBLFecFIE/Y0TAwUq3dFrSEpi7oJ/RAV0rirQhRL755OnH4sSZFVJmDfINvLV64o4PrhVcUuWWIEjbKZVjIE6UDoLnCw257W7ndXaqMjjIkoHX3Ra6XNkrsGHky2TMo9MUKUBfz3kFuy6GDcuJaTI7TSj3qb/I1KUK1/vWT9TojgB7R7p18zOWAkYADVOkC/u/tCqqVXSmIRYD9+hMGQVTFXBBaDJFfSPs/vUWSWxipMeU/oq2mt+f0BV3WnemIRvIf6RzpXDGlNg4SDutUbtbVpkX2PDKfmkVgWRnCVjARKM7wJKnMLiBOOE/h1uzDy+QFVGLoWRCNPvNU=
    sudo: required
    addons:
      apt:
        packages:
        - libcurl4-openssl-dev
        - libelf-dev
        - libdw-dev
        - binutils-dev
        - cmake
    script:
    # install and update cargo subcommands
    # run coverage
    # upload test coverage
    # decrypt deploy key
    # start ssh agent in background
    # add deploy key to ssh
    # upload the documentation
    - if [ "${TRAVIS_PULL_REQUEST}" == false ]; then
        cargo install cargo-update || echo "cargo-update already installed";
        cargo install cargo-travis --git "https://github.com/daxpedda/cargo-travis.git" || echo "cargo-travis already installed";
        cargo install-update -a -g;
        cargo coverage;
        bash <(curl -s https://codecov.io/bash) -s target/kcov;
        echo $github_deploy_key | gpg --passphrase-fd 0 ".travis/github_deploy_key.gpg"
        chmod 600 ".travis/github_deploy_key";
        eval "$(ssh-agent -s)";
        ssh-add ".travis/github_deploy_key";
        cargo doc-upload --branch $TRAVIS_BRANCH;
      fi

  - os: linux
    env:
    - TRAVIS_RUST_VERSION=beta

  - os: linux
    env:
    - TRAVIS_RUST_VERSION=stable

  - os: osx
    env:
    - TRAVIS_RUST_VERSION=nightly

  - os: windows
    language: sh
    env:
    - RUST_BACKTRACE=1
    - TRAVIS_RUST_VERSION=nightly
    cache:
      directories:
      # cache rust compiler
      - "$HOME/.rustup"
      # cache cargo, for cargo subcommands
      - "$HOME/.cargo"
      # cache kcov, we don't want to recompile it every time, only used in nightly
      - target/kcov-master/build
    before_cache:
    # we dont want to cache crates
    - rm -rf "$HOME/.cargo/registry"
    before_install:
    - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$TRAVIS_RUST_VERSION -y
    - export PATH=$HOME/.cargo/bin:$PATH
    - rustup update
    before_script:
    - cargo build
    - cargo test
    - if [ "$TRAVIS_RUST_VERSION" != "nightly" ]; then
        cargo doc;
      else
        cargo rustdoc -- -Z unstable-options --enable-index-page;
        cargo bench;
      fi
