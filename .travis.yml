branches:
  only:
  - master
  - stable

# we plan to cache the rust compiler to shorten build times
language: minimal

env:
  global:
  - RUST_BACKTRACE=1

cache:
  directories:
  # cache rust compiler
  - "$HOME/.rustup"
  # cache cargo, for cargo subcommands
  - "$HOME/.cargo"
  # cache kcov, we don't want to recompile it every time, only used in nightly
  - target/kcov-master/build

before_cache:
# we don't want to cache crates
- rm -rf "$HOME/.cargo/registry"

before_install:
# download the rust installer
- curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$TRAVIS_RUST_VERSION -y
# different command needed for windows
- if [ "$TRAVIS_OS_NAME" != "windows" ]; then
    source $HOME/.cargo/env;
  else
    export PATH=$HOME/.cargo/bin:$PATH;
  fi
# FIXME: find out if the installer is enough to update
# FIXME: if installer already updates, we should only download the installer if rust isn't installed
- rustup update

before_script:
- cargo build
- cargo test
# nightly has additional features we want to test and use
- if [ "$TRAVIS_RUST_VERSION" != "nightly" ]; then
    cargo doc;
  else
    cargo rustdoc -- -Z unstable-options --enable-index-page;
    cargo bench;
  fi

jobs:
  include:
  - os: linux
    env:
    - TRAVIS_RUST_VERSION=nightly
    - secure: vriPZwc8/A2ZD/XcvQRImmAid4SXoRm0h+CM9u+BWVp/DZn7uwK4dJGPqI9RyuWX15Gd99x9hKT6HPgH3mjkmpJ84f5I20iH7V8fdbYGXbDjHLy/tLUVamRZSQLYjeQ+WMbINvm4fq8VzcTghqk/w8BNEVan/0pdLofqjQp3lVuFbtImI/RFizlvkFZafEfW7inJQekVFU/xcHgpWr9Vb4v5d6Ubt24asnx35RTiZaSIRjcdf4lllFm/ElDATuuwSnbLWUCKm0VnpZHxVBUV4D54blbA+A2Iq9ykZY0M0v/BP/7/Suaru/578L6P4/f8HdCAhK3EZVccOJpS2bNo/BU79ntxR5hWxifm8B+xcDjfbAqqnr8Yl+nIIEjqxqzXrxp3jDuqwrtVxkK6XhVoj7fwe8KLlWFCt+rXMCwTewu0upVS3zN+2lRh0/b4NVw1PvAdQI8dZxJHmgkwM9DKLA9AZ8Lz+624IORjofNythMNfgHFCu5Z7BFfZosf9igyyCWzZNFhuAce5UwEERamnE//S65P6rexEXCVwOHiVq5ErdZUPvS1LcA9LgM2+MMxzwf+j7okx7uEl11axIbkGajXKJ5eUb8G663zd0JUKHWjDdtkQYpbIgc0qhFVF06aZewSEnTn3vZyItHbLG1CawtI5Ujo+VqcQl/KraJ21i8=
    sudo: required
    addons:
      apt:
        packages:
        - libcurl4-openssl-dev
        - libelf-dev
        - libdw-dev
        - binutils-dev
        - cmake
    script:
    # install and update cargo subcommands
    # run coverage
    # upload test coverage
    # decrypt deploy key
    # start ssh agent in background
    # add deploy key to ssh
    # upload the documentation
    - if [ "${TRAVIS_PULL_REQUEST}" == false ]; then
        cargo install cargo-update || echo "cargo-update already installed";
        cargo install cargo-travis --git "https://github.com/daxpedda/cargo-travis.git" || echo "cargo-travis already installed";
        cargo install-update -a -g;
        cargo coverage;
        bash <(curl -s https://codecov.io/bash) -s target/kcov;
        echo $github_deploy_key | gpg --passphrase-fd 0 ".travis/github_deploy_key.gpg"
        chmod 600 ".travis/github_deploy_key";
        eval "$(ssh-agent -s)";
        ssh-add ".travis/github_deploy_key";
        cargo doc-upload --branch $TRAVIS_BRANCH;
      fi

  - os: linux
    env:
    - TRAVIS_RUST_VERSION=beta

  - os: linux
    env:
    - TRAVIS_RUST_VERSION=stable

  - os: osx
    env:
    - TRAVIS_RUST_VERSION=nightly

  - os: windows
    language: sh
    env:
    - RUST_BACKTRACE=1
    - TRAVIS_RUST_VERSION=nightly
    cache:
      directories:
      # cache rust compiler
      - "$HOME/.rustup"
      # cache cargo, for cargo subcommands
      - "$HOME/.cargo"
      # cache kcov, we don't want to recompile it every time, only used in nightly
      - target/kcov-master/build
    before_cache:
    # we dont want to cache crates
    - rm -rf "$HOME/.cargo/registry"
    before_install:
    - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=$TRAVIS_RUST_VERSION -y
    - export PATH=$HOME/.cargo/bin:$PATH
    - rustup update
    before_script:
    - cargo build
    - cargo test
    - if [ "$TRAVIS_RUST_VERSION" != "nightly" ]; then
        cargo doc;
      else
        cargo rustdoc -- -Z unstable-options --enable-index-page;
        cargo bench;
      fi
