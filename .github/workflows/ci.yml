name: CI

on:
  push:
    branches:
      - master
      - release
  pull_request:
    branches:
      - master
      - release
  schedule:
    - cron: 0 0 * * *

jobs:
  build-matrix:
    runs-on: ubuntu-latest

    steps:
      - name: Push
        if: github.event_name == 'push'
        run:
          echo >>$GITHUB_ENV BRANCHES=[\"$(echo ${{ github.ref }}|cut -c12- )\"]
      - name: Pull request
        if: github.event_name == 'pull_request'
        run: echo >>$GITHUB_ENV BRANCHES=[\"${{ github.ref }}\"]
      - name: Schedule
        if: github.event_name == 'schedule'
        run: echo >>$GITHUB_ENV BRANCHES=[\"master\", \"release\"]
      - name: Set matrix
        id: matrix
        run: echo "::set-output name=matrix::$BRANCHES"

    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}

  cargo-audit:
    needs: build-matrix

    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJson(needs.build-matrix.outputs.matrix) }}

    runs-on: ubuntu-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
      - name: Cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/cargo-audit
          key: cargo-audit
      - name: Install cargo-audit
        run: cargo -v install cargo-audit
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Audit
        run: cargo audit -D warnings

  ci:
    needs: build-matrix

    strategy:
      fail-fast: false
      matrix:
        rust:
          - { channel: stable, feature: "" }
          - { channel: beta, feature: "" }
          - { channel: nightly, feature: --features nightly }
        feature:
          - ""
        profile:
          - ""
          - --release
        branch: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
        include:
          - rust: { channel: stable, feature: "" }
            features: --no-default-features
            profile: ""
          - rust: { channel: beta, feature: "" }
            features: --no-default-features
            profile: ""
          - rust: { channel: nightly, feature: --features nightly }
            features: --no-default-features
            profile: ""

    runs-on: ubuntu-latest

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust.channel }}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Build
        id: build
        run:
          cargo -v build ${{ matrix.feature }} ${{ matrix.rust.feature }} ${{
          matrix.profile }}
      - name: Test
        if: always() && steps.build.outcome == 'success'
        run:
          cargo -v test ${{ matrix.feature }} ${{ matrix.rust.feature }} ${{
          matrix.profile }}
      - name: Bench
        if:
          always() && steps.build.outcome == 'success' && matrix.rust.channel ==
          'nightly' && matrix.profile == '--release'
        run: cargo -v bench ${{ matrix.feature }} ${{ matrix.rust.feature }}
